{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darko\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./MealItemForm.module.css\";\nimport Input from \"../../UI/Input\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemFrom = props => {\n  _s();\n\n  //Dodavanje jela\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault(); //Dobijam vrednost koja je uneta. Uvek ide current(to upucuje na input element koji se nalazi u ref) i svaki taj input element ima svojstvo value koje sadrzi trenutnu unesenu vrednost\n\n    const enteredAmount = amountInputRef.current.value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount_\" + props.id,\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealItemFrom, \"7cHUJdJWd3tefBlPVbYdC5gY/1U=\");\n\n_c = MealItemFrom;\nexport default MealItemFrom; //Prosledio sam komponenti Input label i input, jer ta komponenta to ima u fajlu Input.js, tj. u fajlu gde je ona napravljena\n//input polju sam prosledio objekat sa podacima. Sve te podatke koje sam tu prosledio, mislim na keys su zapravo svojstva koja se mogu dodati na bilo koji input element, obican input tag\n//Ovo defaultValue znaci da ce mi ta vrednost biti po otvaranju, tj. ucitavanju stranice u pretrazivacu\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemFrom\");","map":{"version":3,"sources":["C:/Users/Darko/Desktop/01-starting-project/src/components/Meals/MealItem/MealItemForm.js"],"names":["React","styles","Input","useRef","MealItemFrom","props","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAMC,cAAc,GAAGH,MAAM,EAA7B;;AACA,QAAMI,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN,GAD+B,CAG/B;;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACD,GALD;;AAOA,sBACE;AAAM,IAAA,SAAS,EAAEX,MAAM,CAACY,IAAxB;AAA8B,IAAA,QAAQ,EAAEN,aAAxC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLQ,QAAAA,EAAE,EAAE,YAAYT,KAAK,CAACS,EADjB;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;GAAMf,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf,C,CAEA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport styles from \"./MealItemForm.module.css\";\r\nimport Input from \"../../UI/Input\";\r\nimport { useRef } from \"react\";\r\n\r\nconst MealItemFrom = (props) => {\r\n  //Dodavanje jela\r\n  const amountInputRef = useRef();\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    //Dobijam vrednost koja je uneta. Uvek ide current(to upucuje na input element koji se nalazi u ref) i svaki taj input element ima svojstvo value koje sadrzi trenutnu unesenu vrednost\r\n    const enteredAmount = amountInputRef.current.value;\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button>+Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemFrom;\r\n\r\n//Prosledio sam komponenti Input label i input, jer ta komponenta to ima u fajlu Input.js, tj. u fajlu gde je ona napravljena\r\n//input polju sam prosledio objekat sa podacima. Sve te podatke koje sam tu prosledio, mislim na keys su zapravo svojstva koja se mogu dodati na bilo koji input element, obican input tag\r\n//Ovo defaultValue znaci da ce mi ta vrednost biti po otvaranju, tj. ucitavanju stranice u pretrazivacu\r\n"]},"metadata":{},"sourceType":"module"}